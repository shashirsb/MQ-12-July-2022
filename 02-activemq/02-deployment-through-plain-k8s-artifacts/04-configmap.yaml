---
apiVersion: v1
kind: ConfigMap
metadata:
  name: activemq-config
  namespace: activemq-system
  labels:
    app.kubernetes.io/name: activemq-cluster
    app.kubernetes.io/part-of: messaging-system
    app.kubernetes.io/component: message-broker
data:
  jetty.xml: |
    <!--
        Licensed to the Apache Software Foundation (ASF) under one or more contributor
        license agreements. See the NOTICE file distributed with this work for additional
        information regarding copyright ownership. The ASF licenses this file to You under
        the Apache License, Version 2.0 (the "License"); you may not use this file except in
        compliance with the License. You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or
        agreed to in writing, software distributed under the License is distributed on an
        "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
        implied. See the License for the specific language governing permissions and
        limitations under the License.
    -->
    <!--
        An embedded servlet engine for serving up the Admin consoles, REST and Ajax APIs and
        some demos Include this file in your configuration to enable ActiveMQ web components
        e.g. <import resource="jetty.xml"/>
    -->
    <beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

        <bean id="securityLoginService" class="org.eclipse.jetty.security.HashLoginService">
            <property name="name" value="ActiveMQRealm" />
            <property name="config" value="${activemq.conf}/jetty-realm.properties" />
        </bean>

        <bean id="securityConstraint" class="org.eclipse.jetty.util.security.Constraint">
            <property name="name" value="BASIC" />
            <property name="roles" value="user,admin" />
            <!-- set authenticate=false to disable login -->
            <property name="authenticate" value="true" />
        </bean>
        <bean id="adminSecurityConstraint" class="org.eclipse.jetty.util.security.Constraint">
            <property name="name" value="BASIC" />
            <property name="roles" value="admin" />
            <!-- set authenticate=false to disable login -->
            <property name="authenticate" value="true" />
        </bean>
        <bean id="securityConstraintMapping" class="org.eclipse.jetty.security.ConstraintMapping">
            <property name="constraint" ref="securityConstraint" />
            <property name="pathSpec" value="/api/*,/admin/*,*.jsp" />
        </bean>
        <bean id="adminSecurityConstraintMapping" class="org.eclipse.jetty.security.ConstraintMapping">
            <property name="constraint" ref="adminSecurityConstraint" />
            <property name="pathSpec" value="*.action" />
        </bean>
        <bean id="securityHandler" class="org.eclipse.jetty.security.ConstraintSecurityHandler">
            <property name="loginService" ref="securityLoginService" />
            <property name="authenticator">
                <bean class="org.eclipse.jetty.security.authentication.BasicAuthenticator" />
            </property>
            <property name="constraintMappings">
                <list>
                    <ref bean="adminSecurityConstraintMapping" />
                    <ref bean="securityConstraintMapping" />
                </list>
            </property>
            <property name="handler">
                <bean id="sec" class="org.eclipse.jetty.server.handler.HandlerCollection">
                    <property name="handlers">
                        <list>
                            <bean class="org.eclipse.jetty.webapp.WebAppContext">
                                <property name="contextPath" value="/admin" />
                                <property name="resourceBase" value="${activemq.home}/webapps/admin" />
                                <property name="logUrlOnStart" value="true" />
                            </bean>
                            <bean class="org.eclipse.jetty.webapp.WebAppContext">
                                <property name="contextPath" value="/fileserver" />
                                <property name="resourceBase" value="${activemq.home}/webapps/fileserver" />
                                <property name="logUrlOnStart" value="true" />
                                <property name="parentLoaderPriority" value="true" />
                            </bean>
                            <bean class="org.eclipse.jetty.webapp.WebAppContext">
                                <property name="contextPath" value="/api" />
                                <property name="resourceBase" value="${activemq.home}/webapps/api" />
                                <property name="logUrlOnStart" value="true" />
                            </bean>
                            <bean class="org.eclipse.jetty.server.handler.ResourceHandler">
                                <property name="directoriesListed" value="false" />
                                <property name="welcomeFiles">
                                    <list>
                                        <value>index.html</value>
                                    </list>
                                </property>
                                <property name="resourceBase" value="${activemq.home}/webapps/" />
                            </bean>
                            <bean id="defaultHandler" class="org.eclipse.jetty.server.handler.DefaultHandler">
                                <property name="serveIcon" value="false" />
                            </bean>
                        </list>
                    </property>
                </bean>
            </property>
        </bean>

        <bean id="contexts" class="org.eclipse.jetty.server.handler.ContextHandlerCollection">
        </bean>

        <bean id="jettyPort" class="org.apache.activemq.web.WebConsolePort" init-method="start">
                <!-- the default port number for the web console -->
            <property name="host" value="0.0.0.0"/>
            <property name="port" value="8161"/>
        </bean>

        <bean id="Server" depends-on="jettyPort" class="org.eclipse.jetty.server.Server" init-method="start"
            destroy-method="stop">

            <property name="connectors">
                <list>
                    <bean id="Connector" class="org.eclipse.jetty.server.nio.SelectChannelConnector">
                        <!-- see the jettyPort bean -->
                        <property name="host" value="#{systemProperties['jetty.host']}" />
                        <property name="port" value="#{systemProperties['jetty.port']}" />
                    </bean>
                    <!--
                        Enable this connector if you wish to use https with web console
                    -->
                    <!--
                    <bean id="SecureConnector" class="org.eclipse.jetty.server.ssl.SslSelectChannelConnector">
                        <property name="port" value="8162" />
                        <property name="keystore" value="file:${activemq.conf}/broker.ks" />
                        <property name="password" value="password" />
                    </bean>
                    -->
                </list>
            </property>

            <property name="handler">
                <bean id="handlers" class="org.eclipse.jetty.server.handler.HandlerCollection">
                    <property name="handlers">
                        <list>
                            <ref bean="contexts" />
                            <ref bean="securityHandler" />
                        </list>
                    </property>
                </bean>
            </property>

        </bean>

    </beans>
  activemq.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
    -->
    <!-- START SNIPPET: example -->
    <beans
      xmlns="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

        <!-- Allows us to use system properties as variables in this configuration file -->
        <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="locations">
                <value>file:${activemq.conf}/credentials.properties</value>
            </property>
        </bean>

      <!-- Allows accessing the server log -->
        <bean id="logQuery" class="org.fusesource.insight.log.log4j.Log4jLogQuery"
              lazy-init="false" scope="singleton"
              init-method="start" destroy-method="stop">
        </bean>

        <!--
            The <broker> element is used to configure the ActiveMQ broker.
        -->
        <broker xmlns="http://activemq.apache.org/schema/core" brokerName="localhost" dataDirectory="${activemq.data}">

            <destinationPolicy>
                <policyMap>
                  <policyEntries>
                    <policyEntry topic=">" >
                        <!-- The constantPendingMessageLimitStrategy is used to prevent
                            slow topic consumers to block producers and affect other consumers
                            by limiting the number of messages that are retained
                            For more information, see:

                            http://activemq.apache.org/slow-consumer-handling.html

                        -->
                      <pendingMessageLimitStrategy>
                        <constantPendingMessageLimitStrategy limit="1000"/>
                      </pendingMessageLimitStrategy>
                    </policyEntry>
                  </policyEntries>
                </policyMap>
            </destinationPolicy>


            <!--
                The managementContext is used to configure how ActiveMQ is exposed in
                JMX. By default, ActiveMQ uses the MBean server that is started by
                the JVM. For more information, see:

                http://activemq.apache.org/jmx.html
            -->
            <managementContext>
                <managementContext createConnector="false"/>
            </managementContext>

            <!--
                Configure message persistence for the broker. The default persistence
                mechanism is the KahaDB store (identified by the kahaDB tag).
                For more information, see:

                http://activemq.apache.org/persistence.html
            -->
            <persistenceAdapter>
                <kahaDB directory="${activemq.data}/kahadb"/>
            </persistenceAdapter>


              <!--
                The systemUsage controls the maximum amount of space the broker will
                use before disabling caching and/or slowing down producers. For more information, see:
                http://activemq.apache.org/producer-flow-control.html
              -->
              <systemUsage>
                <systemUsage>
                    <memoryUsage>
                        <memoryUsage percentOfJvmHeap="70" />
                    </memoryUsage>
                    <storeUsage>
                        <storeUsage limit="100 gb"/>
                    </storeUsage>
                    <tempUsage>
                        <tempUsage limit="50 gb"/>
                    </tempUsage>
                </systemUsage>
            </systemUsage>

            <!--
                The transport connectors expose ActiveMQ over a given protocol to
                clients and other brokers. For more information, see:

                http://activemq.apache.org/configuring-transports.html
            -->
            <transportConnectors>
                <!-- DOS protection, limit concurrent connections to 1000 and frame size to 100MB -->
                <!-- <transportConnector name="openwire" uri="tcp://0.0.0.0:61616?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600"/> -->
                <transportConnector name="amqp" uri="amqp://0.0.0.0:5672?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600"/>
                <!-- <transportConnector name="stomp" uri="stomp://0.0.0.0:61613?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600"/>
                <transportConnector name="mqtt" uri="mqtt://0.0.0.0:1883?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600"/>
                <transportConnector name="ws" uri="ws://0.0.0.0:61614?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600"/> -->
            </transportConnectors>

            <!-- destroy the spring context on shutdown to stop jetty -->
            <shutdownHooks>
                <bean xmlns="http://www.springframework.org/schema/beans" class="org.apache.activemq.hooks.SpringContextHook" />
            </shutdownHooks>

        </broker>

        <!--
            Enable web consoles, REST and Ajax APIs and demos
            The web consoles requires by default login, you can disable this in the jetty.xml file

            Take a look at ${ACTIVEMQ_HOME}/conf/jetty.xml for more details
        -->
        <import resource="jetty.xml"/>

    </beans>
    <!-- END SNIPPET: example -->